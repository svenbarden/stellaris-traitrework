namespace = trait_rework

event = {
	id = trait_rework.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_planet = {
		    limit = {
		        has_owner = yes
		        owner = {
		            is_ai = no
		        }
		    }
			planet_event = { id = trait_rework.2 }
		}
	}
}

#self modification to minerals species
pop_event = {
	id = trait_rework.3
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_being_purged = no
		#is_colony_pop = yes
		is_robot_pop  = no
		planet = {
			has_owner = yes
		}
		NOT = {
		    pop_has_trait = trait_mineral_focus
		}
	}

	immediate = {
	    log = "Trigger traitRework pop minerals event [num_species] for pop [planet]"
		planet = {
			owner = { set_country_flag = pop_modification } 
			set_planet_flag = pop_modification
		}
		set_pop_flag = trait_rework_modified_pop_1

        owner = {
            every_owned_pop_species = {
                #count = all
               # limit = {
                   # has_trait = trait_mineral_focus
              #  }
                root = {
                    change_species = this
                    set_pop_flag = trait_rework_modified_pop_2
                }
            }
        }
	}
}

#country.. num_unique_species

planet_event = {
	id = trait_rework.2
	hide_window = yes
	is_triggered_only = yes

	trigger = { 
		exists = owner
	}

	immediate = {
	    log = "Trigger traitRework planet event"
		every_tile = {
			limit = {
			    #traitrework_trigger_tile_minerals_target = yes
				has_grown_pop = yes
				pop = {
				   is_being_purged = no
				   planet = { is_same_value = root }
				}
			}
			pop = {
			    pop_event = {
			        id = trait_rework.3
			    }
			}
		}
    }
}